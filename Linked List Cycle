/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode walker = head;
        ListNode runner = head;
        while(walker != null && runner != null){//one step for walker, two steps for runner
            if(runner.next == null) break;
            walker = walker.next;
            runner = runner.next.next;
            if(walker == runner)    return true;//if cyclic, they will meet
        }
        return false;
    }
}
